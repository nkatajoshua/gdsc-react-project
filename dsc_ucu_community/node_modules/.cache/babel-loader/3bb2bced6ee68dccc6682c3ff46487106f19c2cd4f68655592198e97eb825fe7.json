{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\Computer Science\\\\Projects\\\\Website\\\\gdsc-react-project\\\\dsc_ucu_community\\\\src\\\\Pages\\\\LoginRegpage\\\\Loginpage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Loginpage.css';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore'; // import Firestore\nimport { firebaseConfig } from '../../Base/firebaseConfig';\nimport MemberContent from '../Member-content/Member-content';\nimport { useNavigate } from 'react-router-dom';\nimport AdminDashboard from '../Admin dash/AdminDashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfirebase.initializeApp(firebaseConfig);\nconst LoginPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const database = firebase.database();\n  const [popupStyle, setPopupStyle] = useState(\"hide\");\n  const [name, setName] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showMemberContent, setShowMemberContent] = useState(false);\n  const [showAdminContent, setShowAdminContent] = useState(false); // add state for admin content\n  const [isAdmin, setIsAdmin] = useState(false); // add state for admin status\n\n  const handleMemberContentClick = () => {\n    setShowMemberContent(true);\n    navigate('/member-content');\n  };\n  const handleAdminContentClick = () => {\n    setShowAdminContent(true);\n    navigate('/admindashboard');\n  };\n  const handleGoogleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => {\n      const {\n        displayName,\n        email,\n        photoURL,\n        uid\n      } = result.user;\n      setName(displayName);\n      setImageUrl(photoURL);\n      setIsAuthenticated(true);\n      console.log(\"LOGIN SUCCESS! Current user: \", displayName);\n      console.log(\"User image URL: \", photoURL);\n\n      // Add user info to members database\n      database.ref('members').child(uid).set({\n        name: displayName,\n        email: email,\n        photoURL: photoURL\n      }).then(() => {\n        console.log(\"User info added to members database\");\n      }).catch(error => {\n        console.log(\"Error adding user info to members database:\", error);\n      });\n\n      // Check if user is an admin\n      firebase.firestore().collection('admins').doc(uid).get().then(doc => {\n        if (doc.exists) {\n          setIsAdmin(true);\n          console.log(\"User is an admin\");\n        } else {\n          setIsAdmin(false);\n          console.log(\"User is not an admin\");\n        }\n      }).catch(error => {\n        console.log(\"Error checking if user is an admin:\", error);\n      });\n\n      // Navigate to member or admin content page\n      if (isAdmin) {\n        handleAdminContentClick();\n      } else {\n        handleMemberContentClick();\n      }\n    }).catch(error => console.log(\"LOGIN FAILED! Error: \", error));\n  };\n  const handleLogout = () => {\n    firebase.auth().signOut();\n    setName(\"\");\n    setImageUrl(\"\");\n    setIsAuthenticated(false);\n    setIsAdmin(false); // reset admin status\n  };\n\n  const handleLogin = () => {\n    const email = document.querySelector(\"#email\").value;\n    const password = document.querySelector(\"#password\").value;\n    firebase.auth().signInWithEmailAndPassword(email, password).then(userCredential => {\n      // Signed in\n      const user = userCredential.user;\n      console.log(\"LOGIN SUCCESS! Current user: \", user.email);\n\n      // Check if user is a member\n      database.ref('members').child(user.uid).once('value', snapshot => {\n        const isMember = snapshot.exists();\n        console.log(\"Is member: \", isMember);\n\n        // If user is a member, show member content\n        if (isMember) {\n          setShowMemberContent(true);\n          handleMemberContentClick(); // navigate to member content page\n        }\n        // If user is an admin, show admin content\n        else {\n          firebase.firestore().collection('admins').doc(user.uid).get().then(doc => {\n            if (doc.exists) {\n              setShowAdminContent(true);\n              handleAdminContentClick(); // navigate to admin content page\n            }\n          }).catch(error => {\n            console.log(\"Error getting admin data:\", error);\n          });\n        }\n      });\n\n      // Update state\n      setName(user.displayName);\n      setImageUrl(user.photoURL);\n      setIsAuthenticated(true);\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      console.log(\"LOGIN FAILED! Error: \", errorCode, errorMessage);\n\n      // Show error popup\n      setPopupStyle('login-popup');\n      setTimeout(() => setPopupStyle(\"hide\"), 3000);\n    });\n  };\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          photoURL\n        } = user;\n        setName(displayName);\n        setImageUrl(photoURL);\n        setIsAuthenticated(true);\n        console.log(\"User is logged in\");\n      } else {\n        console.log(\"User is logged out\");\n        setName(\"\");\n        setImageUrl(\"\");\n        setIsAuthenticated(false);\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: name ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Welcome, \", name, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLogout,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleAdminContentClick,\n            children: \"Admin Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMemberContentClick,\n            children: \"Member Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), showMemberContent && /*#__PURE__*/_jsxDEV(MemberContent, {\n          name: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 35\n        }, this), showAdminContent && /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cover\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"email\",\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-btn\",\n          onClick: handleLogin,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-txt\",\n          children: \"Or login using\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alt-login\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"google\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleGoogleSignIn,\n              className: \"small-button\",\n              children: \"Sign in with google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: popupStyle,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Login Failed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Username or password incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(LoginPage, \"l3hU9FDGXpmoIx+JcQiFxRxXxU4=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useEffect","firebase","firebaseConfig","MemberContent","useNavigate","AdminDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","initializeApp","LoginPage","_s","navigate","database","popupStyle","setPopupStyle","name","setName","imageUrl","setImageUrl","isAuthenticated","setIsAuthenticated","showMemberContent","setShowMemberContent","showAdminContent","setShowAdminContent","isAdmin","setIsAdmin","handleMemberContentClick","handleAdminContentClick","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","result","displayName","email","photoURL","uid","user","console","log","ref","child","set","catch","error","firestore","collection","doc","get","exists","handleLogout","signOut","handleLogin","document","querySelector","value","password","signInWithEmailAndPassword","userCredential","once","snapshot","isMember","errorCode","code","errorMessage","message","setTimeout","onAuthStateChanged","children","className","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","type","id","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/Computer Science/Projects/Website/gdsc-react-project/dsc_ucu_community/src/Pages/LoginRegpage/Loginpage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Loginpage.css';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore'; // import Firestore\nimport { firebaseConfig } from '../../Base/firebaseConfig';\nimport MemberContent from '../Member-content/Member-content';\nimport { useNavigate } from 'react-router-dom';\nimport AdminDashboard from '../Admin dash/AdminDashboard';\n\nfirebase.initializeApp(firebaseConfig);\n\nconst LoginPage = () => {\n  const navigate = useNavigate();\n  const database = firebase.database();\n  const [popupStyle, setPopupStyle] = useState(\"hide\");\n  const [name, setName] = useState(\"\");\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [showMemberContent, setShowMemberContent] = useState(false);\n  const [showAdminContent, setShowAdminContent] = useState(false); // add state for admin content\n  const [isAdmin, setIsAdmin] = useState(false); // add state for admin status\n\n  const handleMemberContentClick = () => {\n    setShowMemberContent(true);\n    navigate('/member-content');\n  };\n\n  const handleAdminContentClick = () => {\n    setShowAdminContent(true);\n    navigate('/admindashboard');\n  }\n\n  const handleGoogleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n      .then((result) => {\n        const { displayName, email, photoURL, uid } = result.user;\n        setName(displayName);\n        setImageUrl(photoURL);\n        setIsAuthenticated(true);\n        console.log(\"LOGIN SUCCESS! Current user: \", displayName);\n        console.log(\"User image URL: \", photoURL);\n\n        // Add user info to members database\n        database.ref('members').child(uid).set({\n          name: displayName,\n          email: email,\n          photoURL: photoURL\n        }).then(() => {\n          console.log(\"User info added to members database\");\n        }).catch((error) => {\n          console.log(\"Error adding user info to members database:\", error);\n        });\n\n        // Check if user is an admin\n        firebase.firestore().collection('admins').doc(uid).get()\n          .then((doc) => {\n            if (doc.exists) {\n              setIsAdmin(true);\n              console.log(\"User is an admin\");\n            } else {\n              setIsAdmin(false);\n              console.log(\"User is not an admin\");\n            }\n          })\n          .catch((error) => {\n            console.log(\"Error checking if user is an admin:\", error);\n          });\n\n        // Navigate to member or admin content page\n        if (isAdmin) {\n          handleAdminContentClick();\n        } else {\n          handleMemberContentClick();\n        }\n      })\n      .catch((error) => console.log(\"LOGIN FAILED! Error: \", error));\n  };\n\n  const handleLogout = () => {\n    firebase.auth().signOut();\n    setName(\"\");\n    setImageUrl(\"\");\n    setIsAuthenticated(false);\n    setIsAdmin(false); // reset admin status\n  };\n\n  const handleLogin = () => {\n    const email = document.querySelector(\"#email\").value;\n    const password = document.querySelector(\"#password\").value;\n  \n    firebase.auth().signInWithEmailAndPassword(email, password)\n      .then((userCredential) => {\n        // Signed in\n        const user = userCredential.user;\n        console.log(\"LOGIN SUCCESS! Current user: \", user.email);\n  \n        // Check if user is a member\n        database.ref('members').child(user.uid).once('value', (snapshot) => {\n          const isMember = snapshot.exists();\n          console.log(\"Is member: \", isMember);\n  \n          // If user is a member, show member content\n          if (isMember) {\n            setShowMemberContent(true);\n            handleMemberContentClick(); // navigate to member content page\n          }\n          // If user is an admin, show admin content\n          else {\n            firebase.firestore().collection('admins').doc(user.uid).get().then((doc) => {\n              if (doc.exists) {\n                setShowAdminContent(true);\n                handleAdminContentClick(); // navigate to admin content page\n              }\n            }).catch((error) => {\n              console.log(\"Error getting admin data:\", error);\n            });\n          }\n        });\n  \n        // Update state\n        setName(user.displayName);\n        setImageUrl(user.photoURL);\n        setIsAuthenticated(true);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(\"LOGIN FAILED! Error: \", errorCode, errorMessage);\n  \n        // Show error popup\n        setPopupStyle('login-popup');\n        setTimeout(() => setPopupStyle(\"hide\"), 3000);\n      });\n  };\n  \n  \n\n\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        const { displayName, photoURL } = user;\n        setName(displayName);\n        setImageUrl(photoURL);\n        setIsAuthenticated(true);\n        console.log(\"User is logged in\");\n      } else {\n        console.log(\"User is logged out\");\n        setName(\"\");\n        setImageUrl(\"\");\n        setIsAuthenticated(false);\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <div className='page'>\n        {name ? (\n          <div className='welcome-screen'>\n            <h1>Welcome, {name}!</h1>\n            <img src={imageUrl} alt='Profile'/>\n            <button onClick={handleLogout}>Logout</button>\n            {isAuthenticated && (\n              <div>\n                {isAdmin && (\n                  <button onClick={handleAdminContentClick}>Admin Content</button>\n                )}\n                  <button onClick={handleMemberContentClick}>Member Content</button>\n              </div>\n            )}\n            {showMemberContent && <MemberContent name={name} />}\n            {showAdminContent && <AdminDashboard/>}\n          </div>\n        ) : (\n          <div className='cover'>\n            <h1>Login</h1>\n            <input type='text' id='email' placeholder='email'/>\n            <input type='password' id='password' placeholder='password'/>\n            <button type='submit' className='login-btn' onClick={handleLogin}>Login</button>\n            <p className='login-txt'>Or login using</p>\n            <div className='alt-login'>\n              <div className='google'>\n                <button onClick={handleGoogleSignIn} className='small-button'>Sign in with google</button>\n              </div>\n            </div>\n            <div className={popupStyle}>\n              <h3>Login Failed</h3>\n              <p>Username or password incorrect</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAO,sBAAsB;AAC7B,OAAO,2BAA2B,CAAC,CAAC;AACpC,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,OAAOC,aAAa,MAAM,kCAAkC;AAC5D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1DR,QAAQ,CAACS,aAAa,CAACR,cAAc,CAAC;AAEtC,MAAMS,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,QAAQ,GAAGT,WAAW,EAAE;EAC9B,MAAMU,QAAQ,GAAGb,QAAQ,CAACa,QAAQ,EAAE;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,MAAM,CAAC;EACpD,MAAM,CAACkB,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsB,eAAe,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACwB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAAC0B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EACjE,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE/C,MAAM8B,wBAAwB,GAAGA,CAAA,KAAM;IACrCL,oBAAoB,CAAC,IAAI,CAAC;IAC1BX,QAAQ,CAAC,iBAAiB,CAAC;EAC7B,CAAC;EAED,MAAMiB,uBAAuB,GAAGA,CAAA,KAAM;IACpCJ,mBAAmB,CAAC,IAAI,CAAC;IACzBb,QAAQ,CAAC,iBAAiB,CAAC;EAC7B,CAAC;EAED,MAAMkB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,QAAQ,GAAG,IAAI/B,QAAQ,CAACgC,IAAI,CAACC,kBAAkB,EAAE;IACvDjC,QAAQ,CAACgC,IAAI,EAAE,CAACE,eAAe,CAACH,QAAQ,CAAC,CACtCI,IAAI,CAAEC,MAAM,IAAK;MAChB,MAAM;QAAEC,WAAW;QAAEC,KAAK;QAAEC,QAAQ;QAAEC;MAAI,CAAC,GAAGJ,MAAM,CAACK,IAAI;MACzDxB,OAAO,CAACoB,WAAW,CAAC;MACpBlB,WAAW,CAACoB,QAAQ,CAAC;MACrBlB,kBAAkB,CAAC,IAAI,CAAC;MACxBqB,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEN,WAAW,CAAC;MACzDK,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAAC;;MAEzC;MACA1B,QAAQ,CAAC+B,GAAG,CAAC,SAAS,CAAC,CAACC,KAAK,CAACL,GAAG,CAAC,CAACM,GAAG,CAAC;QACrC9B,IAAI,EAAEqB,WAAW;QACjBC,KAAK,EAAEA,KAAK;QACZC,QAAQ,EAAEA;MACZ,CAAC,CAAC,CAACJ,IAAI,CAAC,MAAM;QACZO,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACpD,CAAC,CAAC,CAACI,KAAK,CAAEC,KAAK,IAAK;QAClBN,OAAO,CAACC,GAAG,CAAC,6CAA6C,EAAEK,KAAK,CAAC;MACnE,CAAC,CAAC;;MAEF;MACAhD,QAAQ,CAACiD,SAAS,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC,CAACC,GAAG,CAACX,GAAG,CAAC,CAACY,GAAG,EAAE,CACrDjB,IAAI,CAAEgB,GAAG,IAAK;QACb,IAAIA,GAAG,CAACE,MAAM,EAAE;UACd1B,UAAU,CAAC,IAAI,CAAC;UAChBe,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;QACjC,CAAC,MAAM;UACLhB,UAAU,CAAC,KAAK,CAAC;UACjBe,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACrC;MACF,CAAC,CAAC,CACDI,KAAK,CAAEC,KAAK,IAAK;QAChBN,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEK,KAAK,CAAC;MAC3D,CAAC,CAAC;;MAEJ;MACA,IAAItB,OAAO,EAAE;QACXG,uBAAuB,EAAE;MAC3B,CAAC,MAAM;QACLD,wBAAwB,EAAE;MAC5B;IACF,CAAC,CAAC,CACDmB,KAAK,CAAEC,KAAK,IAAKN,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEK,KAAK,CAAC,CAAC;EAClE,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAM;IACzBtD,QAAQ,CAACgC,IAAI,EAAE,CAACuB,OAAO,EAAE;IACzBtC,OAAO,CAAC,EAAE,CAAC;IACXE,WAAW,CAAC,EAAE,CAAC;IACfE,kBAAkB,CAAC,KAAK,CAAC;IACzBM,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;EACrB,CAAC;;EAED,MAAM6B,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMlB,KAAK,GAAGmB,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC,CAACC,KAAK;IACpD,MAAMC,QAAQ,GAAGH,QAAQ,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,KAAK;IAE1D3D,QAAQ,CAACgC,IAAI,EAAE,CAAC6B,0BAA0B,CAACvB,KAAK,EAAEsB,QAAQ,CAAC,CACxDzB,IAAI,CAAE2B,cAAc,IAAK;MACxB;MACA,MAAMrB,IAAI,GAAGqB,cAAc,CAACrB,IAAI;MAChCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,IAAI,CAACH,KAAK,CAAC;;MAExD;MACAzB,QAAQ,CAAC+B,GAAG,CAAC,SAAS,CAAC,CAACC,KAAK,CAACJ,IAAI,CAACD,GAAG,CAAC,CAACuB,IAAI,CAAC,OAAO,EAAGC,QAAQ,IAAK;QAClE,MAAMC,QAAQ,GAAGD,QAAQ,CAACX,MAAM,EAAE;QAClCX,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEsB,QAAQ,CAAC;;QAEpC;QACA,IAAIA,QAAQ,EAAE;UACZ1C,oBAAoB,CAAC,IAAI,CAAC;UAC1BK,wBAAwB,EAAE,CAAC,CAAC;QAC9B;QACA;QAAA,KACK;UACH5B,QAAQ,CAACiD,SAAS,EAAE,CAACC,UAAU,CAAC,QAAQ,CAAC,CAACC,GAAG,CAACV,IAAI,CAACD,GAAG,CAAC,CAACY,GAAG,EAAE,CAACjB,IAAI,CAAEgB,GAAG,IAAK;YAC1E,IAAIA,GAAG,CAACE,MAAM,EAAE;cACd5B,mBAAmB,CAAC,IAAI,CAAC;cACzBI,uBAAuB,EAAE,CAAC,CAAC;YAC7B;UACF,CAAC,CAAC,CAACkB,KAAK,CAAEC,KAAK,IAAK;YAClBN,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEK,KAAK,CAAC;UACjD,CAAC,CAAC;QACJ;MACF,CAAC,CAAC;;MAEF;MACA/B,OAAO,CAACwB,IAAI,CAACJ,WAAW,CAAC;MACzBlB,WAAW,CAACsB,IAAI,CAACF,QAAQ,CAAC;MAC1BlB,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC,CAAC,CACD0B,KAAK,CAAEC,KAAK,IAAK;MAChB,MAAMkB,SAAS,GAAGlB,KAAK,CAACmB,IAAI;MAC5B,MAAMC,YAAY,GAAGpB,KAAK,CAACqB,OAAO;MAClC3B,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEuB,SAAS,EAAEE,YAAY,CAAC;;MAE7D;MACArD,aAAa,CAAC,aAAa,CAAC;MAC5BuD,UAAU,CAAC,MAAMvD,aAAa,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC;EAMDhB,SAAS,CAAC,MAAM;IACdC,QAAQ,CAACgC,IAAI,EAAE,CAACuC,kBAAkB,CAAE9B,IAAI,IAAK;MAC3C,IAAIA,IAAI,EAAE;QACR,MAAM;UAAEJ,WAAW;UAAEE;QAAS,CAAC,GAAGE,IAAI;QACtCxB,OAAO,CAACoB,WAAW,CAAC;QACpBlB,WAAW,CAACoB,QAAQ,CAAC;QACrBlB,kBAAkB,CAAC,IAAI,CAAC;QACxBqB,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAClC,CAAC,MAAM;QACLD,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjC1B,OAAO,CAAC,EAAE,CAAC;QACXE,WAAW,CAAC,EAAE,CAAC;QACfE,kBAAkB,CAAC,KAAK,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEf,OAAA,CAAAE,SAAA;IAAAgE,QAAA,eACElE,OAAA;MAAKmE,SAAS,EAAC,MAAM;MAAAD,QAAA,EAClBxD,IAAI,gBACHV,OAAA;QAAKmE,SAAS,EAAC,gBAAgB;QAAAD,QAAA,gBAC7BlE,OAAA;UAAAkE,QAAA,GAAI,WAAS,EAACxD,IAAI,EAAC,GAAC;QAAA;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACzBvE,OAAA;UAAKwE,GAAG,EAAE5D,QAAS;UAAC6D,GAAG,EAAC;QAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACnCvE,OAAA;UAAQ0E,OAAO,EAAE1B,YAAa;UAAAkB,QAAA,EAAC;QAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,EAC7CzD,eAAe,iBACdd,OAAA;UAAAkE,QAAA,GACG9C,OAAO,iBACNpB,OAAA;YAAQ0E,OAAO,EAAEnD,uBAAwB;YAAA2C,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACxD,eACCvE,OAAA;YAAQ0E,OAAO,EAAEpD,wBAAyB;YAAA4C,QAAA,EAAC;UAAc;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAEvE,EACAvD,iBAAiB,iBAAIhB,OAAA,CAACJ,aAAa;UAACc,IAAI,EAAEA;QAAK;UAAA0D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAG,EAClDrD,gBAAgB,iBAAIlB,OAAA,CAACF,cAAc;UAAAsE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClC,gBAENvE,OAAA;QAAKmE,SAAS,EAAC,OAAO;QAAAD,QAAA,gBACpBlE,OAAA;UAAAkE,QAAA,EAAI;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACdvE,OAAA;UAAO2E,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,OAAO;UAACC,WAAW,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eACnDvE,OAAA;UAAO2E,IAAI,EAAC,UAAU;UAACC,EAAE,EAAC,UAAU;UAACC,WAAW,EAAC;QAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAE,eAC7DvE,OAAA;UAAQ2E,IAAI,EAAC,QAAQ;UAACR,SAAS,EAAC,WAAW;UAACO,OAAO,EAAExB,WAAY;UAAAgB,QAAA,EAAC;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS,eAChFvE,OAAA;UAAGmE,SAAS,EAAC,WAAW;UAAAD,QAAA,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eAC3CvE,OAAA;UAAKmE,SAAS,EAAC,WAAW;UAAAD,QAAA,eACxBlE,OAAA;YAAKmE,SAAS,EAAC,QAAQ;YAAAD,QAAA,eACrBlE,OAAA;cAAQ0E,OAAO,EAAElD,kBAAmB;cAAC2C,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAmB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAS;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACtF;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eACNvE,OAAA;UAAKmE,SAAS,EAAE3D,UAAW;UAAA0D,QAAA,gBACzBlE,OAAA;YAAAkE,QAAA,EAAI;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eACrBvE,OAAA;YAAAkE,QAAA,EAAG;UAA8B;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACjC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAET;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACG,iBACL;AAEP,CAAC;AAAClE,EAAA,CA1LID,SAAS;EAAA,QACIP,WAAW;AAAA;AAAAiF,EAAA,GADxB1E,SAAS;AA4Lf,eAAeA,SAAS;AAAC,IAAA0E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}